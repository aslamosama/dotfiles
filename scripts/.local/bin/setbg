#!/bin/sh

# This script does the following:
#	Run by itself, set the wallpaper (at X start).
#	If given a file, set that as the new wallpaper.
#	If given a directory, choose random file in it.

# Location of link to wallpaper link.
bgloc="${XDG_DATA_HOME:-$HOME/.local/share}/bg"

# Give -s as parameter to make notifications silent.
while getopts "s" o; do case "${o}" in
  s) silent='1' ;;
  esac done

shift $((OPTIND - 1))

trueloc="$(readlink -f "$1")" &&
  case "$(file --mime-type -b "$trueloc")" in
  image/*) ln -sf "$trueloc" "$bgloc" && [ -z "$silent" ] && notify-send -i "$bgloc" "Wallpaper applied..." ;;
  inode/directory) ln -sf "$(find -L "$trueloc" -iregex '.*.\(jpg\|jpeg\|webp\|avif\|png\|gif\)' -type f | shuf -n 1)" "$bgloc" && [ -z "$silent" ] && notify-send -i "$bgloc" "Random Wallpaper chosen." ;;
  *)
    [ -z "$silent" ] && notify-send "ó°‹© Error" "Not a valid image or directory."
    exit 1
    ;;
  esac

mode="zoom"

realbg="$(readlink -f "$bgloc")"

if echo "$realbg" | grep -Ei '(_tile|-tile|\.tile\.)' > /dev/null; then
  mode="tile"
elif [ -f "$realbg.tile" ]; then
  mode="tile"
elif [ -f "$(dirname "$realbg")/.wallmode" ]; then
  mode="$(cat "$(dirname "$realbg")/.wallmode")"
else
  if command -v identify >/dev/null 2>&1; then
    read width height < <(identify -format "%w %h" "$realbg" 2>/dev/null)
    if [ "$width" -le 512 ] && [ "$height" -le 512 ]; then
      mode="tile"
    fi
  fi
fi

xwallpaper --"$mode" "$bgloc"
